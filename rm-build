#!/usr/bin/php
<?

$version = '0.0.5';

include(dirname(__FILE__).'/utils.d/init.php');

$params = CommandLine::parseArgs($_SERVER['argv']);

$verbose = isset($params['v']) || isset($params['verbose']);

if(isset($params['version'])){
	return version($version, $verbose);
}

if(isset($params['help']) || isset($params['h'])){
	return help('Использование rm-build [OPTION] [--bin=PATH]
Устанавливает или обновляет команды из пакета rm-server-cmd в директорию PATH.

Параметры:
      --bin=PATH - путь к директории bin пользователя (например /home/user/bin).
  -v, --verbose  - более подробный вывод.
  -h, --help     - показать эту справку.
      --version  - показать версию утилиты.');
}

$home = isset($_SERVER['HOME']) ? $_SERVER['HOME'] : false;

if(!isset($params['bin']) or $params['bin'] === true){
	if(empty($home)){
		throw new error('Не удалось определить домашнюю директорию пользователя.');
	}else{
		$params['bin'] = "{$home}/bin";
		
		if($verbose){
			$res = file_exists($params['bin']) ? 'true' : 'false';
			out("Проверка существования директории [{$params['bin']}]: {$res}", 'black', UTIL);
		}
		
		if(!file_exists($params['bin'])){
			$res = @mkdir($params['bin']);
			if($res){
				chmod($params['bin'], 0700);
				chown($params['bin'], USER);
				chgrp($params['bin'], USER);
			}
			$res = $res === true ? 'true' : 'false';
			out("Попытка создания директории [{$params['bin']}]: {$res}", 'black', UTIL);
		}
		
		if(!file_exists($params['bin'])){
			return error('Не указан параметр --bin=PATH');
		}
	}
}

$base = dirname(__FILE__);
$bin = checkValidPath($params['bin']);

$files = glob($base.'/rm-*');
foreach($files as $pth){
	$name = str_replace('.php', '', basename($pth));
	system("ln -fs {$pth} {$bin}/{$name}");
	
	if($verbose){
		out("Создана команда [{$bin}/{$name}]", 'black', UTIL);
	}
}

out("Инициализация завершена.", 'green', UTIL);

return endCommand();